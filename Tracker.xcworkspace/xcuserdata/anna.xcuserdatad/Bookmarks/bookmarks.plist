<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>top-level-items</key>
	<array>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>618</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>617</string>
					<key>Timestamp</key>
					<string>739887028.445312</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Tracker/Tracker/TrackersViewController.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    }
</string>
				<key>leading</key>
				<string>        
        collectionView.reloadData()
</string>
				<key>trailing</key>
				<string>}

extension TrackersViewController: TrackerCategoryStoreDelegate {
</string>
			</dict>
			<key>title</key>
			<string>editTracker method (Context Menu)</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>536</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>535</string>
					<key>Timestamp</key>
					<string>739887028.4453011</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Tracker/Tracker/TrackersViewController.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    func editTracker(at indexPath: IndexPath) {
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>        analyticsService.report(event: "click", params: ["screen": "Main", "item": "edit"])
        let vc = NewHabitViewController()
        vc.delegate = self
</string>
			</dict>
			<key>title</key>
			<string>editTracker</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>193</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>192</string>
					<key>Timestamp</key>
					<string>739539977.6467789</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Tracker/Tracker/NewTracker/NewHabit/NewHabitViewController.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    func setupEditTracker(tracker: Tracker) {
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>        isEditingTracker = true
        editedTracker = tracker
        nameTextField.text = tracker.name
</string>
			</dict>
			<key>title</key>
			<string>etupEditTracker</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>150</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>149</string>
					<key>Timestamp</key>
					<string>739539977.646759</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Tracker/Tracker/NewTracker/NewHabit/NewHabitViewController.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    @objc private func createButtonTapped() {
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>        guard let newTrackerName = nameTextField.text else { return }
        guard let date = delegate?.setDateForNewTracker() else { return }
        var newTrackerSchedule: [String] = []
</string>
			</dict>
			<key>title</key>
			<string>createButtonTapped</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>382</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>381</string>
					<key>Timestamp</key>
					<string>739539982.460706</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Tracker/Tracker/NewTracker/NewHabit/NewHabitViewController.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -&gt; UICollectionViewCell {
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>        guard let cell = collectionView.dequeueReusableCell(
            withReuseIdentifier: NewTrackerCollectionViewCell.reuseIdentifier,
            for: indexPath
</string>
			</dict>
			<key>title</key>
			<string>cellForItemAt collectionView</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>346</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>345</string>
					<key>Timestamp</key>
					<string>739539977.646787</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Tracker/Tracker/NewTracker/NewHabit/NewHabitViewController.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>
        switch indexPath.row {
        case 0:
</string>
			</dict>
			<key>title</key>
			<string>didSelectRowAt tableView NewHabitVC</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>125</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>124</string>
					<key>Timestamp</key>
					<string>739883391.8185771</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Tracker/Tracker/TrackersViewController.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    @objc private func filterButtonTapped(_ sender: UIButton) {
</string>
				<key>leading</key>
				<string>    }
    
</string>
				<key>trailing</key>
				<string>        analyticsService.report(event: "click", params: ["screen": "Main", "item": "filter"])
        let filterViewController = FilterViewController()
        filterViewController.delegate = self
</string>
			</dict>
			<key>title</key>
			<string>filterButtonTapped</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>5</string>
					<key>EndingLineNumber</key>
					<string>97</string>
					<key>StartingColumnNumber</key>
					<string>4</string>
					<key>StartingLineNumber</key>
					<string>89</string>
					<key>Timestamp</key>
					<string>739884110.333601</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Tracker/Tracker/TrackersViewController.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>override func viewDidLoad() {
        super.viewDidLoad()
        setupNavigationBar()
        setupUI()
        syncData()
        updateUI()
        loadTrackersAndCategories()
        fetchRecord()
    }</string>
				<key>leading</key>
				<string>    }()
    
    </string>
				<key>trailing</key>
				<string>
    
    override func viewWillAppear(_ animated: Bool) {
</string>
			</dict>
			<key>title</key>
			<string>viewDidLoad TrackersVC</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>661</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>660</string>
					<key>Timestamp</key>
					<string>739887028.4452569</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Tracker/Tracker/TrackersViewController.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    private func fetchRecord()  {
</string>
				<key>leading</key>
				<string>
extension TrackersViewController {
</string>
				<key>trailing</key>
				<string>        do {
            completedTrackers = try trackerRecordStore.fetchRecords()
            collectionView.reloadData()
</string>
			</dict>
			<key>title</key>
			<string>fetchRecord</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
		<dict>
			<key>destination</key>
			<dict>
				<key>location-parameters</key>
				<dict>
					<key>EndingColumnNumber</key>
					<string>0</string>
					<key>EndingLineNumber</key>
					<string>430</string>
					<key>StartingColumnNumber</key>
					<string>0</string>
					<key>StartingLineNumber</key>
					<string>429</string>
					<key>Timestamp</key>
					<string>739883391.818333</string>
				</dict>
				<key>rebasable-url</key>
				<dict>
					<key>base</key>
					<string>workspace</string>
					<key>payload</key>
					<dict>
						<key>relative-path</key>
						<string>Tracker/Tracker/TrackersViewController.swift</string>
					</dict>
				</dict>
			</dict>
			<key>text-context</key>
			<dict>
				<key>focused</key>
				<string>    func completeTracker(id: UUID, at indexPath: IndexPath) {
</string>
				<key>leading</key>
				<string>
extension TrackersViewController: TrackerCollectionViewCellDelegate {
</string>
				<key>trailing</key>
				<string>        analyticsService.report(event: "click", params: ["screen": "Main", "item": "track"])
        if currentDate &lt;= Date() {
            let trackerRecord = TrackerRecord(trackerID: id, date: datePicker.date)
</string>
			</dict>
			<key>title</key>
			<string>completeRecord</string>
			<key>type</key>
			<string>bookmark</string>
		</dict>
	</array>
</dict>
</plist>
